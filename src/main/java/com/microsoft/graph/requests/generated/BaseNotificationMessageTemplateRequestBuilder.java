// ------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

package com.microsoft.graph.requests.generated;
import com.microsoft.graph.requests.extensions.INotificationMessageTemplateRequest;
import com.microsoft.graph.requests.extensions.NotificationMessageTemplateRequest;
import com.microsoft.graph.requests.extensions.ILocalizedNotificationMessageCollectionRequestBuilder;
import com.microsoft.graph.requests.extensions.LocalizedNotificationMessageCollectionRequestBuilder;
import com.microsoft.graph.requests.extensions.ILocalizedNotificationMessageRequestBuilder;
import com.microsoft.graph.requests.extensions.LocalizedNotificationMessageRequestBuilder;
import com.microsoft.graph.requests.extensions.INotificationMessageTemplateSendTestMessageRequestBuilder;
import com.microsoft.graph.requests.extensions.NotificationMessageTemplateSendTestMessageRequestBuilder;

import com.microsoft.graph.core.IBaseClient;
import com.microsoft.graph.http.BaseRequestBuilder;
import com.microsoft.graph.options.Option;
import java.util.EnumSet;

// **NOTE** This file was generated by a tool and any changes will be overwritten.

/**
 * The class for the Base Notification Message Template Request Builder.
 */
public class BaseNotificationMessageTemplateRequestBuilder extends BaseRequestBuilder implements IBaseNotificationMessageTemplateRequestBuilder {

    /**
     * The request builder for the NotificationMessageTemplate
     *
     * @param requestUrl     the request URL
     * @param client         the service client
     * @param requestOptions the options for this request
     */
    public BaseNotificationMessageTemplateRequestBuilder(final String requestUrl, final IBaseClient client, final java.util.List<? extends Option> requestOptions) {
        super(requestUrl, client, requestOptions);
    }

    /**
     * Creates the request
     *
     * @return the INotificationMessageTemplateRequest instance
     */
    public INotificationMessageTemplateRequest buildRequest() {
        return buildRequest(getOptions());
    }

    /**
     * Creates the request with specific requestOptions instead of the existing requestOptions
     *
     * @param requestOptions the options for this request
     * @return the INotificationMessageTemplateRequest instance
     */
    public INotificationMessageTemplateRequest buildRequest(final java.util.List<? extends Option> requestOptions) {
        return new NotificationMessageTemplateRequest(getRequestUrl(), getClient(), requestOptions);
    }

    public ILocalizedNotificationMessageCollectionRequestBuilder localizedNotificationMessages() {
        return new LocalizedNotificationMessageCollectionRequestBuilder(getRequestUrlWithAdditionalSegment("localizedNotificationMessages"), getClient(), null);
    }

    public ILocalizedNotificationMessageRequestBuilder localizedNotificationMessages(final String id) {
        return new LocalizedNotificationMessageRequestBuilder(getRequestUrlWithAdditionalSegment("localizedNotificationMessages") + "/" + id, getClient(), null);
    }

    public INotificationMessageTemplateSendTestMessageRequestBuilder sendTestMessage() {
        return new NotificationMessageTemplateSendTestMessageRequestBuilder(getRequestUrlWithAdditionalSegment("microsoft.graph.sendTestMessage"), getClient(), null);
    }
}

