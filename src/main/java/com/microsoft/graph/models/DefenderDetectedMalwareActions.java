package com.microsoft.graph.models;

import com.microsoft.kiota.serialization.AdditionalDataHolder;
import com.microsoft.kiota.serialization.Parsable;
import com.microsoft.kiota.serialization.ParseNode;
import com.microsoft.kiota.serialization.SerializationWriter;
import java.util.function.Consumer;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
/** Specify Defenders actions to take on detected Malware per threat level. */
public class DefenderDetectedMalwareActions implements AdditionalDataHolder, Parsable {
    /** Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well. */
    private Map<String, Object> _additionalData;
    /** Defenders default action to take on detected Malware threats. */
    private DefenderThreatAction _highSeverity;
    /** Defenders default action to take on detected Malware threats. */
    private DefenderThreatAction _lowSeverity;
    /** Defenders default action to take on detected Malware threats. */
    private DefenderThreatAction _moderateSeverity;
    /** The OdataType property */
    private String _odataType;
    /** Defenders default action to take on detected Malware threats. */
    private DefenderThreatAction _severeSeverity;
    /**
     * Instantiates a new defenderDetectedMalwareActions and sets the default values.
     * @return a void
     */
    @javax.annotation.Nullable
    public DefenderDetectedMalwareActions() {
        this.setAdditionalData(new HashMap<>());
    }
    /**
     * Creates a new instance of the appropriate class based on discriminator value
     * @param parseNode The parse node to use to read the discriminator value and create the object
     * @return a defenderDetectedMalwareActions
     */
    @javax.annotation.Nonnull
    public static DefenderDetectedMalwareActions createFromDiscriminatorValue(@javax.annotation.Nonnull final ParseNode parseNode) {
        Objects.requireNonNull(parseNode);
        return new DefenderDetectedMalwareActions();
    }
    /**
     * Gets the additionalData property value. Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     * @return a Map<String, Object>
     */
    @javax.annotation.Nonnull
    public Map<String, Object> getAdditionalData() {
        return this._additionalData;
    }
    /**
     * The deserialization information for the current model
     * @return a Map<String, Consumer<ParseNode>>
     */
    @javax.annotation.Nonnull
    public Map<String, Consumer<ParseNode>> getFieldDeserializers() {
        final HashMap<String, Consumer<ParseNode>> deserializerMap = new HashMap<String, Consumer<ParseNode>>(5);
        deserializerMap.put("highSeverity", (n) -> { this.setHighSeverity(n.getEnumValue(DefenderThreatAction.class)); });
        deserializerMap.put("lowSeverity", (n) -> { this.setLowSeverity(n.getEnumValue(DefenderThreatAction.class)); });
        deserializerMap.put("moderateSeverity", (n) -> { this.setModerateSeverity(n.getEnumValue(DefenderThreatAction.class)); });
        deserializerMap.put("@odata.type", (n) -> { this.setOdataType(n.getStringValue()); });
        deserializerMap.put("severeSeverity", (n) -> { this.setSevereSeverity(n.getEnumValue(DefenderThreatAction.class)); });
        return deserializerMap;
    }
    /**
     * Gets the highSeverity property value. Defenders default action to take on detected Malware threats.
     * @return a defenderThreatAction
     */
    @javax.annotation.Nullable
    public DefenderThreatAction getHighSeverity() {
        return this._highSeverity;
    }
    /**
     * Gets the lowSeverity property value. Defenders default action to take on detected Malware threats.
     * @return a defenderThreatAction
     */
    @javax.annotation.Nullable
    public DefenderThreatAction getLowSeverity() {
        return this._lowSeverity;
    }
    /**
     * Gets the moderateSeverity property value. Defenders default action to take on detected Malware threats.
     * @return a defenderThreatAction
     */
    @javax.annotation.Nullable
    public DefenderThreatAction getModerateSeverity() {
        return this._moderateSeverity;
    }
    /**
     * Gets the @odata.type property value. The OdataType property
     * @return a string
     */
    @javax.annotation.Nullable
    public String getOdataType() {
        return this._odataType;
    }
    /**
     * Gets the severeSeverity property value. Defenders default action to take on detected Malware threats.
     * @return a defenderThreatAction
     */
    @javax.annotation.Nullable
    public DefenderThreatAction getSevereSeverity() {
        return this._severeSeverity;
    }
    /**
     * Serializes information the current object
     * @param writer Serialization writer to use to serialize this model
     * @return a void
     */
    @javax.annotation.Nonnull
    public void serialize(@javax.annotation.Nonnull final SerializationWriter writer) {
        Objects.requireNonNull(writer);
        writer.writeEnumValue("highSeverity", this.getHighSeverity());
        writer.writeEnumValue("lowSeverity", this.getLowSeverity());
        writer.writeEnumValue("moderateSeverity", this.getModerateSeverity());
        writer.writeStringValue("@odata.type", this.getOdataType());
        writer.writeEnumValue("severeSeverity", this.getSevereSeverity());
        writer.writeAdditionalData(this.getAdditionalData());
    }
    /**
     * Sets the additionalData property value. Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     * @param value Value to set for the AdditionalData property.
     * @return a void
     */
    @javax.annotation.Nonnull
    public void setAdditionalData(@javax.annotation.Nullable final Map<String, Object> value) {
        this._additionalData = value;
    }
    /**
     * Sets the highSeverity property value. Defenders default action to take on detected Malware threats.
     * @param value Value to set for the highSeverity property.
     * @return a void
     */
    @javax.annotation.Nonnull
    public void setHighSeverity(@javax.annotation.Nullable final DefenderThreatAction value) {
        this._highSeverity = value;
    }
    /**
     * Sets the lowSeverity property value. Defenders default action to take on detected Malware threats.
     * @param value Value to set for the lowSeverity property.
     * @return a void
     */
    @javax.annotation.Nonnull
    public void setLowSeverity(@javax.annotation.Nullable final DefenderThreatAction value) {
        this._lowSeverity = value;
    }
    /**
     * Sets the moderateSeverity property value. Defenders default action to take on detected Malware threats.
     * @param value Value to set for the moderateSeverity property.
     * @return a void
     */
    @javax.annotation.Nonnull
    public void setModerateSeverity(@javax.annotation.Nullable final DefenderThreatAction value) {
        this._moderateSeverity = value;
    }
    /**
     * Sets the @odata.type property value. The OdataType property
     * @param value Value to set for the OdataType property.
     * @return a void
     */
    @javax.annotation.Nonnull
    public void setOdataType(@javax.annotation.Nullable final String value) {
        this._odataType = value;
    }
    /**
     * Sets the severeSeverity property value. Defenders default action to take on detected Malware threats.
     * @param value Value to set for the severeSeverity property.
     * @return a void
     */
    @javax.annotation.Nonnull
    public void setSevereSeverity(@javax.annotation.Nullable final DefenderThreatAction value) {
        this._severeSeverity = value;
    }
}
