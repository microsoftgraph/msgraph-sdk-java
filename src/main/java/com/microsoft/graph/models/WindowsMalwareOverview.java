package com.microsoft.graph.models;

import com.microsoft.kiota.serialization.AdditionalDataHolder;
import com.microsoft.kiota.serialization.Parsable;
import com.microsoft.kiota.serialization.ParseNode;
import com.microsoft.kiota.serialization.SerializationWriter;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
/**
 * Windows device malware overview.
 */
public class WindowsMalwareOverview implements AdditionalDataHolder, Parsable {
    /**
     * Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     */
    private Map<String, Object> additionalData;
    /**
     * List of device counts per malware category
     */
    private java.util.List<WindowsMalwareCategoryCount> malwareCategorySummary;
    /**
     * Count of devices with malware detected in the last 30 days
     */
    private Integer malwareDetectedDeviceCount;
    /**
     * List of device counts per malware execution state
     */
    private java.util.List<WindowsMalwareExecutionStateCount> malwareExecutionStateSummary;
    /**
     * List of device counts per malware
     */
    private java.util.List<WindowsMalwareNameCount> malwareNameSummary;
    /**
     * List of active malware counts per malware severity
     */
    private java.util.List<WindowsMalwareSeverityCount> malwareSeveritySummary;
    /**
     * List of device counts per malware state
     */
    private java.util.List<WindowsMalwareStateCount> malwareStateSummary;
    /**
     * The OdataType property
     */
    private String odataType;
    /**
     * List of device counts with malware per windows OS version
     */
    private java.util.List<OsVersionCount> osVersionsSummary;
    /**
     * Count of all distinct malwares detected across all devices. Valid values -2147483648 to 2147483647
     */
    private Integer totalDistinctMalwareCount;
    /**
     * Count of all malware detections across all devices. Valid values -2147483648 to 2147483647
     */
    private Integer totalMalwareCount;
    /**
     * Instantiates a new windowsMalwareOverview and sets the default values.
     * @return a void
     */
    @javax.annotation.Nullable
    public WindowsMalwareOverview() {
        this.setAdditionalData(new HashMap<>());
    }
    /**
     * Creates a new instance of the appropriate class based on discriminator value
     * @param parseNode The parse node to use to read the discriminator value and create the object
     * @return a windowsMalwareOverview
     */
    @javax.annotation.Nonnull
    public static WindowsMalwareOverview createFromDiscriminatorValue(@javax.annotation.Nonnull final ParseNode parseNode) {
        Objects.requireNonNull(parseNode);
        return new WindowsMalwareOverview();
    }
    /**
     * Gets the additionalData property value. Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     * @return a Map<String, Object>
     */
    @javax.annotation.Nonnull
    public Map<String, Object> getAdditionalData() {
        return this.additionalData;
    }
    /**
     * The deserialization information for the current model
     * @return a Map<String, java.util.function.Consumer<ParseNode>>
     */
    @javax.annotation.Nonnull
    public Map<String, java.util.function.Consumer<ParseNode>> getFieldDeserializers() {
        final HashMap<String, java.util.function.Consumer<ParseNode>> deserializerMap = new HashMap<String, java.util.function.Consumer<ParseNode>>(10);
        deserializerMap.put("malwareCategorySummary", (n) -> { this.setMalwareCategorySummary(n.getCollectionOfObjectValues(WindowsMalwareCategoryCount::createFromDiscriminatorValue)); });
        deserializerMap.put("malwareDetectedDeviceCount", (n) -> { this.setMalwareDetectedDeviceCount(n.getIntegerValue()); });
        deserializerMap.put("malwareExecutionStateSummary", (n) -> { this.setMalwareExecutionStateSummary(n.getCollectionOfObjectValues(WindowsMalwareExecutionStateCount::createFromDiscriminatorValue)); });
        deserializerMap.put("malwareNameSummary", (n) -> { this.setMalwareNameSummary(n.getCollectionOfObjectValues(WindowsMalwareNameCount::createFromDiscriminatorValue)); });
        deserializerMap.put("malwareSeveritySummary", (n) -> { this.setMalwareSeveritySummary(n.getCollectionOfObjectValues(WindowsMalwareSeverityCount::createFromDiscriminatorValue)); });
        deserializerMap.put("malwareStateSummary", (n) -> { this.setMalwareStateSummary(n.getCollectionOfObjectValues(WindowsMalwareStateCount::createFromDiscriminatorValue)); });
        deserializerMap.put("@odata.type", (n) -> { this.setOdataType(n.getStringValue()); });
        deserializerMap.put("osVersionsSummary", (n) -> { this.setOsVersionsSummary(n.getCollectionOfObjectValues(OsVersionCount::createFromDiscriminatorValue)); });
        deserializerMap.put("totalDistinctMalwareCount", (n) -> { this.setTotalDistinctMalwareCount(n.getIntegerValue()); });
        deserializerMap.put("totalMalwareCount", (n) -> { this.setTotalMalwareCount(n.getIntegerValue()); });
        return deserializerMap;
    }
    /**
     * Gets the malwareCategorySummary property value. List of device counts per malware category
     * @return a windowsMalwareCategoryCount
     */
    @javax.annotation.Nullable
    public java.util.List<WindowsMalwareCategoryCount> getMalwareCategorySummary() {
        return this.malwareCategorySummary;
    }
    /**
     * Gets the malwareDetectedDeviceCount property value. Count of devices with malware detected in the last 30 days
     * @return a integer
     */
    @javax.annotation.Nullable
    public Integer getMalwareDetectedDeviceCount() {
        return this.malwareDetectedDeviceCount;
    }
    /**
     * Gets the malwareExecutionStateSummary property value. List of device counts per malware execution state
     * @return a windowsMalwareExecutionStateCount
     */
    @javax.annotation.Nullable
    public java.util.List<WindowsMalwareExecutionStateCount> getMalwareExecutionStateSummary() {
        return this.malwareExecutionStateSummary;
    }
    /**
     * Gets the malwareNameSummary property value. List of device counts per malware
     * @return a windowsMalwareNameCount
     */
    @javax.annotation.Nullable
    public java.util.List<WindowsMalwareNameCount> getMalwareNameSummary() {
        return this.malwareNameSummary;
    }
    /**
     * Gets the malwareSeveritySummary property value. List of active malware counts per malware severity
     * @return a windowsMalwareSeverityCount
     */
    @javax.annotation.Nullable
    public java.util.List<WindowsMalwareSeverityCount> getMalwareSeveritySummary() {
        return this.malwareSeveritySummary;
    }
    /**
     * Gets the malwareStateSummary property value. List of device counts per malware state
     * @return a windowsMalwareStateCount
     */
    @javax.annotation.Nullable
    public java.util.List<WindowsMalwareStateCount> getMalwareStateSummary() {
        return this.malwareStateSummary;
    }
    /**
     * Gets the @odata.type property value. The OdataType property
     * @return a string
     */
    @javax.annotation.Nullable
    public String getOdataType() {
        return this.odataType;
    }
    /**
     * Gets the osVersionsSummary property value. List of device counts with malware per windows OS version
     * @return a osVersionCount
     */
    @javax.annotation.Nullable
    public java.util.List<OsVersionCount> getOsVersionsSummary() {
        return this.osVersionsSummary;
    }
    /**
     * Gets the totalDistinctMalwareCount property value. Count of all distinct malwares detected across all devices. Valid values -2147483648 to 2147483647
     * @return a integer
     */
    @javax.annotation.Nullable
    public Integer getTotalDistinctMalwareCount() {
        return this.totalDistinctMalwareCount;
    }
    /**
     * Gets the totalMalwareCount property value. Count of all malware detections across all devices. Valid values -2147483648 to 2147483647
     * @return a integer
     */
    @javax.annotation.Nullable
    public Integer getTotalMalwareCount() {
        return this.totalMalwareCount;
    }
    /**
     * Serializes information the current object
     * @param writer Serialization writer to use to serialize this model
     * @return a void
     */
    @javax.annotation.Nonnull
    public void serialize(@javax.annotation.Nonnull final SerializationWriter writer) {
        Objects.requireNonNull(writer);
        writer.writeCollectionOfObjectValues("malwareCategorySummary", this.getMalwareCategorySummary());
        writer.writeIntegerValue("malwareDetectedDeviceCount", this.getMalwareDetectedDeviceCount());
        writer.writeCollectionOfObjectValues("malwareExecutionStateSummary", this.getMalwareExecutionStateSummary());
        writer.writeCollectionOfObjectValues("malwareNameSummary", this.getMalwareNameSummary());
        writer.writeCollectionOfObjectValues("malwareSeveritySummary", this.getMalwareSeveritySummary());
        writer.writeCollectionOfObjectValues("malwareStateSummary", this.getMalwareStateSummary());
        writer.writeStringValue("@odata.type", this.getOdataType());
        writer.writeCollectionOfObjectValues("osVersionsSummary", this.getOsVersionsSummary());
        writer.writeIntegerValue("totalDistinctMalwareCount", this.getTotalDistinctMalwareCount());
        writer.writeIntegerValue("totalMalwareCount", this.getTotalMalwareCount());
        writer.writeAdditionalData(this.getAdditionalData());
    }
    /**
     * Sets the additionalData property value. Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
     * @param value Value to set for the AdditionalData property.
     * @return a void
     */
    @javax.annotation.Nonnull
    public void setAdditionalData(@javax.annotation.Nullable final Map<String, Object> value) {
        this.additionalData = value;
    }
    /**
     * Sets the malwareCategorySummary property value. List of device counts per malware category
     * @param value Value to set for the malwareCategorySummary property.
     * @return a void
     */
    @javax.annotation.Nonnull
    public void setMalwareCategorySummary(@javax.annotation.Nullable final java.util.List<WindowsMalwareCategoryCount> value) {
        this.malwareCategorySummary = value;
    }
    /**
     * Sets the malwareDetectedDeviceCount property value. Count of devices with malware detected in the last 30 days
     * @param value Value to set for the malwareDetectedDeviceCount property.
     * @return a void
     */
    @javax.annotation.Nonnull
    public void setMalwareDetectedDeviceCount(@javax.annotation.Nullable final Integer value) {
        this.malwareDetectedDeviceCount = value;
    }
    /**
     * Sets the malwareExecutionStateSummary property value. List of device counts per malware execution state
     * @param value Value to set for the malwareExecutionStateSummary property.
     * @return a void
     */
    @javax.annotation.Nonnull
    public void setMalwareExecutionStateSummary(@javax.annotation.Nullable final java.util.List<WindowsMalwareExecutionStateCount> value) {
        this.malwareExecutionStateSummary = value;
    }
    /**
     * Sets the malwareNameSummary property value. List of device counts per malware
     * @param value Value to set for the malwareNameSummary property.
     * @return a void
     */
    @javax.annotation.Nonnull
    public void setMalwareNameSummary(@javax.annotation.Nullable final java.util.List<WindowsMalwareNameCount> value) {
        this.malwareNameSummary = value;
    }
    /**
     * Sets the malwareSeveritySummary property value. List of active malware counts per malware severity
     * @param value Value to set for the malwareSeveritySummary property.
     * @return a void
     */
    @javax.annotation.Nonnull
    public void setMalwareSeveritySummary(@javax.annotation.Nullable final java.util.List<WindowsMalwareSeverityCount> value) {
        this.malwareSeveritySummary = value;
    }
    /**
     * Sets the malwareStateSummary property value. List of device counts per malware state
     * @param value Value to set for the malwareStateSummary property.
     * @return a void
     */
    @javax.annotation.Nonnull
    public void setMalwareStateSummary(@javax.annotation.Nullable final java.util.List<WindowsMalwareStateCount> value) {
        this.malwareStateSummary = value;
    }
    /**
     * Sets the @odata.type property value. The OdataType property
     * @param value Value to set for the OdataType property.
     * @return a void
     */
    @javax.annotation.Nonnull
    public void setOdataType(@javax.annotation.Nullable final String value) {
        this.odataType = value;
    }
    /**
     * Sets the osVersionsSummary property value. List of device counts with malware per windows OS version
     * @param value Value to set for the osVersionsSummary property.
     * @return a void
     */
    @javax.annotation.Nonnull
    public void setOsVersionsSummary(@javax.annotation.Nullable final java.util.List<OsVersionCount> value) {
        this.osVersionsSummary = value;
    }
    /**
     * Sets the totalDistinctMalwareCount property value. Count of all distinct malwares detected across all devices. Valid values -2147483648 to 2147483647
     * @param value Value to set for the totalDistinctMalwareCount property.
     * @return a void
     */
    @javax.annotation.Nonnull
    public void setTotalDistinctMalwareCount(@javax.annotation.Nullable final Integer value) {
        this.totalDistinctMalwareCount = value;
    }
    /**
     * Sets the totalMalwareCount property value. Count of all malware detections across all devices. Valid values -2147483648 to 2147483647
     * @param value Value to set for the totalMalwareCount property.
     * @return a void
     */
    @javax.annotation.Nonnull
    public void setTotalMalwareCount(@javax.annotation.Nullable final Integer value) {
        this.totalMalwareCount = value;
    }
}
