// Template Source: BaseEntity.java.tt
// ------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

package com.microsoft.graph.models.extensions;
import com.microsoft.graph.serializer.ISerializer;
import com.microsoft.graph.serializer.IJsonBackedObject;
import com.microsoft.graph.serializer.AdditionalDataManager;
import java.util.EnumSet;
import com.microsoft.graph.models.generated.StagedFeatureName;
import com.microsoft.graph.models.extensions.DirectoryObject;
import com.microsoft.graph.models.extensions.Entity;
import com.microsoft.graph.requests.extensions.DirectoryObjectCollectionPage;


import com.google.gson.JsonObject;
import com.google.gson.annotations.SerializedName;
import com.google.gson.annotations.Expose;

// **NOTE** This file was generated by a tool and any changes will be overwritten.

/**
 * The class for the Feature Rollout Policy.
 */
public class FeatureRolloutPolicy extends Entity implements IJsonBackedObject {


    /**
     * The Description.
     * A description for this feature rollout policy.
     */
    @SerializedName(value = "description", alternate = {"Description"})
    @Expose
    public String description;

    /**
     * The Display Name.
     * The display name for this  feature rollout policy.
     */
    @SerializedName(value = "displayName", alternate = {"DisplayName"})
    @Expose
    public String displayName;

    /**
     * The Feature.
     * Possible values are: passthroughAuthentication, seamlessSso, passwordHashSync, unknownFutureValue.
     */
    @SerializedName(value = "feature", alternate = {"Feature"})
    @Expose
    public StagedFeatureName feature;

    /**
     * The Is Applied To Organization.
     * Indicates whether this feature rollout policy should be applied to the entire organization.
     */
    @SerializedName(value = "isAppliedToOrganization", alternate = {"IsAppliedToOrganization"})
    @Expose
    public Boolean isAppliedToOrganization;

    /**
     * The Is Enabled.
     * Indicates whether the feature rollout is enabled.
     */
    @SerializedName(value = "isEnabled", alternate = {"IsEnabled"})
    @Expose
    public Boolean isEnabled;

    /**
     * The Applies To.
     * Nullable. Specifies a list of directoryObjects that feature is enabled for.
     */
    @SerializedName(value = "appliesTo", alternate = {"AppliesTo"})
    @Expose
    public DirectoryObjectCollectionPage appliesTo;


    /**
     * The raw representation of this class
     */
    private JsonObject rawObject;

    /**
     * The serializer
     */
    private ISerializer serializer;

    /**
     * Gets the raw representation of this class
     *
     * @return the raw representation of this class
     */
    public JsonObject getRawObject() {
        return rawObject;
    }

    /**
     * Gets serializer
     *
     * @return the serializer
     */
    protected ISerializer getSerializer() {
        return serializer;
    }

    /**
     * Sets the raw JSON object
     *
     * @param serializer the serializer
     * @param json the JSON object to set this object to
     */
    public void setRawObject(final ISerializer serializer, final JsonObject json) {
        this.serializer = serializer;
        rawObject = json;


        if (json.has("appliesTo")) {
            appliesTo = serializer.deserializeObject(json.get("appliesTo").toString(), DirectoryObjectCollectionPage.class);
        }
    }
}
